{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "11029009265237624607"
    }
  },
  "parameters": {
    "adminUsername": {
        "type": "string",
        "metadata": {
            "description": "The name of the administrator account of the new VM and domain"
        }
    },
    "adminPassword": {
        "type": "securestring",
        "metadata": {
            "description": "The password for the administrator account of the new VM and domain"
        }
    },
    "domainName": {
        "type": "string",
        "metadata": {
            "description": "The FQDN of the Active Directory Domain to be created"
        }
    },
    "dnsPrefix": {
        "type": "string",
        "metadata": {
            "description": "The DNS prefix for the public IP address used by the Load Balancer"
        }
    },
    "_artifactsLocation": {
    "type": "string",
    "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
    },
    "defaultValue": "[deployment().properties.templateLink.uri]"
},
"_artifactsLocationSasToken": {
    "type": "securestring",
    "metadata": {
        "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
    },
    "defaultValue": ""
},
    "location": {
      "type": "string",
      "defaultValue": "westus3",
      "metadata": {
        "description": "The Azure region where resources in the template should be deployed."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet",
      "metadata": {
        "description": "Name for the subnet in the virtual network where the network interface is connected."
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "nsg",
      "metadata": {
        "description": "Name of the network security group that sets rules for the network environment."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "MIMVNET",
      "metadata": {
        "description": "Name of the virtual network."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Network subnet and prefix."
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "myPublicIP",
      "metadata": {
        "description": "Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Allocation method for the Public IP used to access the Virtual Machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "MIM01",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "osDiskStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "StandardSSD_LRS",
        "Standard_LRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "Specifies the storage account type for OS and data disk."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "zone": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "metadata": {
        "description": "Availability zone number."
      }
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable accelerated networking."
      }
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('addressPrefix')]"
            }
          }
        ]
      }
    },
    {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "[parameters('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
            "publicIPAllocationMethod": "Static",
            "dnsSettings": {
                "domainNameLabel": "[parameters('dnsPrefix')]"
            }
        }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}-nic', parameters('vmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))).subnets[0].id]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIPAddressName'))]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "zones": [
        "[parameters('zone')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskStorageAccountType')]"
            }
          },
          "dataDisks": [
            {
                "name": "[concat(parameters('vmName'), '_DataDisk')]",
                "caching": "ReadWrite",
                "createOption": "Empty",
                "diskSizeGB": 20,
                "managedDisk": {
                    "storageAccountType": "[parameters('osDiskStorageAccountType')]"
                },
                "lun": 0
            },
            {
                "name": "[concat(parameters('vmName'), '_DataDisk')]",
                "caching": "ReadWrite",
                "createOption": "Empty",
                "diskSizeGB": 100,
                "managedDisk": {
                    "storageAccountType": "[parameters('osDiskStorageAccountType')]"
                },
                "lun": 1
            },
            {
                "name": "[concat(parameters('vmName'), '_DataDisk')]",
                "caching": "ReadWrite",
                "createOption": "Empty",
                "diskSizeGB": 100,
                "managedDisk": {
                    "storageAccountType": "[parameters('osDiskStorageAccountType')]"
                },
                "lun": 2
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
      ]
    },
    "resources": [
            {
                    "type": "extensions",
                    "apiVersion": "2019-03-01",
                    "name": "CreateADForest",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[parameters('virtualMachineName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken')))]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]   
        
            {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-07-01",
            "name": "[format('{0}/{1}', parameters('vmName'), 'AzurePolicyforWindows')]",
            "location": "[parameters('location')]",
            "properties": {
                "publisher": "Microsoft.GuestConfiguration",
                "type": "ConfigurationforWindows",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ]
            },
            {
            "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
            "apiVersion": "2020-06-25",
            "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
            "name": "AzureWindowsBaseline",
            "location": "[parameters('location')]",
            "properties": {
                "guestConfiguration": {
                "assignmentType": "ApplyAndMonitor",
                "name": "AzureWindowsBaseline",
                "version": "1.*"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ]
            },
                    {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-11-01",
            "name": "UpdateVNetDNS",
            "dependsOn": [
                "CreateADForest"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet-with-dns-server.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('subnetRange')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[parameters('privateIPAddress')]"
                        ]
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }

        ]//top Resources
    }

